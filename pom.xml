<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.medrec</groupId>
  <artifactId>medical-record</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <name>medical-record</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>17</maven.compiler.release>

    <!-- Dependency versions -->
    <hibernate.version>6.6.4.Final</hibernate.version>
    <postgres.version>42.7.5</postgres.version>
    <grpc.version>1.61.0</grpc.version>
    <protobuf.version>3.25.1</protobuf.version>
    <maven.shade.version>3.5.1</maven.shade.version>
    <spring.boot.version>3.4.3</spring.boot.version>
    <jwt.version>4.4.0</jwt.version>
    <bcrypt.version>0.4</bcrypt.version>
  </properties>

  <!-- Define all dependencies that child modules can use -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Common Module -->
        <groupId>com.medrec</groupId>
        <artifactId>common</artifactId>
        <version>1.0.0</version>
      </dependency>

      <!-- Hibernate ORM -->
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- PostgreSQL Driver -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgres.version}</version>
      </dependency>

      <!-- Protobuf Dependency -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <!-- gRPC Dependencies -->
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-netty-shaded</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-protobuf</artifactId>
          <version>${grpc.version}</version>
      </dependency>
      <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-stub</artifactId>
          <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-services</artifactId>
        <version>${grpc.version}</version>
      </dependency>

      <!-- Used by gRPC -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.2</version>
      </dependency>

      <!-- Spring Boot -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>

      <!-- JWT -->
      <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>${jwt.version}</version>
      </dependency>

      <!-- Bcrypt -->
      <dependency>
        <groupId>org.mindrot</groupId>
        <artifactId>jbcrypt</artifactId>
        <version>${bcrypt.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- This plugin is used to package the Spring Boot API gateway, with all of its additional resource files into a jar -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring.boot.version}</version>
        </plugin>

        <!-- This plugin is used to package the Jars for all other services except for the API, singe Spring Boot needs custom dependencies -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>api</module>
    <module>auth</module>
    <module>users</module>
    <module>diagnoses</module>
    <module>appointments</module>
  </modules>
</project>
