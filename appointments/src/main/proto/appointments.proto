syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

package com.medrec.grpc.appointments;

service AppointmentsService {
  rpc CreateAppointment (CreateAppointmentRequest) returns (Appointment);
  rpc GetAppointmentById (google.protobuf.Int32Value) returns (Appointment);
  rpc GetAllAppointments (google.protobuf.Empty) returns (AppointmentsList);
  rpc GetAllByPatientEmail (google.protobuf.StringValue) returns (AppointmentsList);
  rpc GetAllByDoctorEmail (google.protobuf.StringValue) returns (AppointmentsList);
  rpc GetAllByPatientId (google.protobuf.Int32Value) returns (AppointmentsList);
  rpc GetAllByDoctorId (google.protobuf.Int32Value) returns (AppointmentsList);
  rpc UpdateAppointment (UpdateAppointmentRequest) returns (Appointment);
  rpc DeleteAppointmentById (google.protobuf.Int32Value) returns (google.protobuf.Empty);
  rpc CascadeDeletePatientAppointments (google.protobuf.Int32Value) returns (google.protobuf.Empty);
  rpc CascadeDeleteDoctorAppointments (google.protobuf.Int32Value) returns (google.protobuf.Empty);

  rpc StartAppointmentFetchIcds (StartAppointmentFetchIcdsRequest) returns (IcdEntitiesList);
  rpc FinishAppointmentAddDiagnosis (FinishAppointmentAddDiagnosisRequest) returns (google.protobuf.Empty);

  rpc GetAllPatientIdsForIcd (google.protobuf.Int32Value) returns (IdsList);
  rpc GetAppointmentsCountForDoctors (google.protobuf.Empty) returns (DoctorAppointmentsCountList);
  rpc ListAppointmentsByPatients (google.protobuf.Empty) returns (AppointmentsByPatientList);
  rpc ListAppointmentsForTimePeriod (ListAppointmentsForTimePeriodRequest) returns (AppointmentsList);
  rpc GetMonthWithMostSickLeaves (MostSickLeavesRequest) returns (MonthWithMostSickLeaves);
  rpc GetDoctorsBySickLeaveCount (DoctorsBySickLeaveCountRequest) returns (DoctorsWithMostSickLeavesList);
}

message DoctorsWithMostSickLeavesList {
  repeated DoctorSickLeaveCount doctorWithMostSickLeaves = 1;
}

message DoctorSickLeaveCount {
  int32 doctorId = 1;
  int32 count = 2;
}

message DoctorsBySickLeaveCountRequest {
  int32 limit = 1;
}

message MonthWithMostSickLeaves {
  string date = 1;
  int32 count = 2;
}

message MostSickLeavesRequest {
  string year = 1;
}

message ListAppointmentsForTimePeriodRequest {
  string startDate = 1;
  string endDate = 2;
  optional int32 doctorId = 3;
}

message AppointmentsByPatientList {
  repeated AppointmentsByPatient list = 1;
}

message AppointmentsByPatient {
  int32 patientId = 1;
  AppointmentsList appointments = 2;
}

message DoctorAppointmentsCountList {
  repeated DoctorAppointmentsCount count = 1;
}

message DoctorAppointmentsCount {
  int32 doctorId = 1;
  int32 appointmentsCount = 2;
}

message IdsList {
  repeated int32 id = 1;
}

message FinishAppointmentAddDiagnosisRequest {
  int32 appointmentId = 1;
  CreateDiagnosisRequest diagnosis = 2;
}

message StartAppointmentFetchIcdsRequest {
  int32 appointmentId = 1;
  int32 doctorId = 2;
}

message Appointment {
  int32 id = 1;
  string date = 2;
  string time = 3;
  int32 patientId = 4;
  int32 doctorId = 5;
  string status = 6;
  optional Diagnosis diagnosis = 7;
}

message CreateAppointmentRequest {
  string date = 2;
  string time = 3;
  int32 patientId = 4;
  int32 doctorId = 5;
}

message AppointmentsList {
  repeated Appointment appointments = 1;
}

message UpdateAppointmentRequest {
  int32 id = 1;
  optional string status = 2;
  optional int32 diagnosisId = 3;
}

service DiagnosesService {
  rpc CreateDiagnosis (CreateDiagnosisRequest) returns (Diagnosis);
  rpc GetDiagnosisById (google.protobuf.Int32Value) returns (Diagnosis);
  rpc GetAllDiagnoses (google.protobuf.Empty) returns (DiagnosesList);
  rpc UpdateDiagnosis (UpdateDiagnosisRequest) returns (Diagnosis);
  rpc DeleteDiagnosisById (google.protobuf.Int32Value) returns (google.protobuf.Empty);
}

message Diagnosis {
  int32 id = 1;
  string treatmentDescription = 2;
  Icd icd = 3;
  optional SickLeave sickLeave = 4;
}

message CreateDiagnosisRequest {
  string treatmentDescription = 1;
  int32 icdId = 2;
  optional string sickLeaveDate = 3;
  optional int32 sickLeaveDays = 4;
}

message DiagnosesList {
  repeated Diagnosis diagnoses = 1;
}

message UpdateDiagnosisRequest {
  int32 id = 1;
  optional string treatmentDescription = 2;
  optional int32 icdId = 3;
  optional string sickLeaveDate = 4;
  optional int32 sickLeaveDays = 5;
}

service SickLeaveService {
  rpc CreateSickLeave (CreateSickLeaveRequest) returns (SickLeave);
  rpc GetSickLeaveById (google.protobuf.Int32Value) returns (SickLeave);
  rpc GetAllSickLeaveEntities (google.protobuf.Empty) returns (SickLeaveEntitiesList);
  rpc UpdateSickLeave (UpdateSickLeaveRequest) returns (SickLeave);
  rpc DeleteSickLeaveById (google.protobuf.Int32Value) returns (google.protobuf.Empty);
}

message SickLeave {
  int32 id = 1;
  string date = 2;
  int32 daysOfLeave = 3;
}

message CreateSickLeaveRequest {
  string date = 1;
  int32 daysOfLeave = 2;
}

message SickLeaveEntitiesList {
  repeated SickLeave sickLeaveEntities = 2;
}

message UpdateSickLeaveRequest {
  int32 id = 1;
  optional string date = 2;
  optional int32 daysOfLeave = 3;
}

service IcdService {
  rpc CreateIcd (CreateIcdRequest) returns (Icd);
  rpc GetIcdById (google.protobuf.Int32Value) returns (Icd);
  rpc GetAllIcdEntities (google.protobuf.Empty) returns (IcdEntitiesList);
  rpc UpdateIcd (UpdateIcdRequest) returns (Icd);
  rpc DeleteIcdById (google.protobuf.Int32Value) returns (google.protobuf.Empty);

  rpc MostFrequentIcds (google.protobuf.Int32Value) returns (IcdOccurrenceList);
}

message IcdOccurrenceList {
  repeated IcdOccurrence icdOccurrence = 1;
}

message IcdOccurrence{
  int32 icdId = 1;
  string icdCode = 2;
  int32 occurrence = 3;
}

message Icd {
  int32 id = 1;
  string code = 2;
  string description = 3;
}

message CreateIcdRequest {
  string code = 1;
  string description = 2;
}

message IcdEntitiesList {
  repeated Icd icdEntities = 1;
}

message UpdateIcdRequest {
  int32 id = 1;
  optional string code = 2;
  optional string description = 3;
}
