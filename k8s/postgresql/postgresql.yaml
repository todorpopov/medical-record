# Persistent Volume Claim for PostgreSQL Storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: medical-record
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath

---

# ConfigMap for Initialization of Databases for the Different Microservices
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: medical-record
data:
  init.sql: |
    CREATE DATABASE appointments;
    CREATE DATABASE diagnoses;
    CREATE DATABASE users;

---

# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: medical-record
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env: # Env variables should be held in a 'Secret' K8S resource for production use
            - name: POSTGRES_USER
              value: "admin"
            - name: POSTGRES_PASSWORD
              value: "admin"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-scripts
          configMap:
            name: postgres-init

---

# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: medical-record
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 31001
  type: NodePort